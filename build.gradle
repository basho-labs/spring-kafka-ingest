/*
 * Copyright (c) 2013-2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/milestone" }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE',
                'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.0'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'publishing'
    id 'com.jfrog.artifactory' version '3.1.0'
    id 'com.palantir.docker' version '0.3.0'
}

description = 'Riak TS Ingestion library'
group = 'com.basho.hachiman'

ext {
    gradleVersion = '2.9'
    gradleScriptDir = "${rootProject.projectDir}/gradle"

    // Logging
    slf4jVersion = '1.7.12'
    logbackVersion = '1.1.3'

    // Riak
    riakClientVersion = '2.0.2'

    javadocLinks = [
            "http://docs.oracle.com/javase/8/docs/api/",
            "http://www.reactive-streams.org/reactive-streams-tck-1.0.0-javadoc/"
    ] as String[]
}

apply plugin: 'spring-boot'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

configurations.all {
    exclude group: 'commons-logging'
    exclude group: 'org.codehaus.groovy', module: 'groovy'
}

sourceSets.main.resources.srcDirs = ["src/main/resources", "src/main/data"]

repositories {
    jcenter()
    maven { url 'https://dl.bintray.com/basho/data-platform' }
    maven { url 'http://repo.spring.io/milestone' }
}

[compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:serial",
        "-Xlint:varargs",
        "-Xlint:cast",
        "-Xlint:classfile",
        "-Xlint:dep-ann",
        "-Xlint:divzero",
        "-Xlint:empty",
        "-Xlint:finally",
        "-Xlint:overrides",
        "-Xlint:path",
        "-Xlint:processing",
        "-Xlint:static",
        "-Xlint:try",
        "-Xlint:-options", // intentionally disabled
        "-Xlint:-fallthrough", // intentionally disabled
        "-Xlint:-rawtypes", // TODO enable and fix warnings
        "-Xlint:-deprecation", // TODO enable and fix warnings
        "-Xlint:-unchecked" // TODO enable and fix warnings
]

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

dependencies {
    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"

    // Spring Boot
    compile "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-actuator"

    // RxJava
    compile "io.reactivex:rxjava:1.0.16",
            "io.reactivex:rxjava-reactive-streams:1.0.1"

    // Riak
    compile "io.netty:netty-all:4.0.33.Final",
            "com.basho.riak:dataplatform-riak-client:1.1.0"

    // Kafka
    compile("org.apache.kafka:kafka_2.11:0.8.2.2") {
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j'
    }

    // Jackson
    compile "com.fasterxml.jackson.core:jackson-databind"

    // GS Collections
    compile "com.goldmansachs:gs-collections:7.0.0"

    // Testing
    testCompile "org.hamcrest:hamcrest-library:1.3",
            "org.springframework.boot:spring-boot-starter-test"
    testRuntime "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "ch.qos.logback:logback-classic:$logbackVersion"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            pom.withXml {
                // add all items necessary for maven central publication
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Riak TS Ingestion library'
                    description 'Riak TS Ingestion library'
                    url 'https://github.com/basho-labs/hachiman-ingest'

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                            comments 'A business-friendly OSS license'
                        }
                    }

                    developers {
                        developer {
                            name 'Jon Brisbin'
                            email 'jbrisbin@basho.com'
                            organization 'Basho Technologies, Inc'
                            organizationUrl 'http://www.basho.com'
                        }
                    }

                    scm {
                        connection 'scm:git:ssh://github.com/basho-labs/hachiman-ingest.git'
                        developerConnection 'scm:git:ssh://github.com/basho-labs/hachiman-ingest.git'
                        url 'https://github.com/basho-labs/hachiman-ingest'
                        tag 'HEAD'
                    }
                }
            }
        }
    }
}

springBoot {
    mainClass = "com.basho.hachiman.ingest.IngestApplication"
}

docker {
    name "basholabs-docker-dockerv2-local.artifactoryonline.com/basholabs/${project.name}:${project.version}"
    dependsOn bootRepackage
    files jar.archivePath
}

artifactory {
    contextUrl = 'https://basholabs.artifactoryonline.com/basholabs'
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = System.getenv('ARTIFACTORY_USERNAME')
            password = System.getenv('ARTIFACTORY_PASSWORD')
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            properties {
                mavenJava 'com.basho.hachiman:*:*:*@*', 'buildInfo.build.name': System.getProperty('buildInfo.build.name', 'gradle')
            }
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}
